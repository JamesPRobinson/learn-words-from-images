doctype html
html
  head
    link(rel="icon" href="/public/favicon.ico")
    title="Impara dagli immagini"
    style
      include style.css
  body
    div(class="grid-container")
      div(class="row1")
        canvas
        img(id="original_unsplash_image" src=`${url}`)
      div(class="row2")
        div(class="btn-toolbar")
          for name in names
            button(class="answer-button disabled" onclick="submit_answer(this)" disabled="disabled")=name
script.
  var canvas;
  var context;
  var width_ratio;
  var height_ratio;
  var last_box;
  async function drawInitialRectangle(box, image, colour = "red") {
      canvas = document.querySelector("canvas");
      context = canvas.getContext("2d");
      const imageWidth_og = image.naturalWidth;
      const imageHeight_og = image.naturalHeight;
      const imageWidth = image.width;
      const imageHeight = image.height;
      canvas.width = imageWidth;
      canvas.height = imageHeight;
      context.drawImage(image, 0, 0, imageWidth, imageHeight);
      width_ratio = imageWidth_og / imageWidth;
      height_ratio = imageHeight_og / imageHeight;
      context.lineWidth = 6;
      context.strokeStyle = colour;
      await drawRect(box);
      last_box = box;
  }
  async function drawRect(box) {
      context.strokeRect(box[0] / width_ratio, box[1] / height_ratio, (box[2] - box[0]) / width_ratio, (box[3] - box[1]) / height_ratio);
  }
  window.onload = async function() {
      const image = document.getElementById("original_unsplash_image");
      const box = "!{box}".split(",").map(x => Number(x));
      await drawInitialRectangle(box, image);
      image.remove();
      let buttons = document.getElementsByTagName("button");
      for (let i = 0, len = buttons.length; i < len; i++) {
          buttons[i].disabled = false;
          buttons[i].classList.remove("disabled");
      }
  };
  async function submit_answer(button) {
      const button_text = button.textContent;
      fetch('/answer', {
              body: JSON.stringify({
                  text: button_text
              }),
              headers: {
                  "Content-Type": "application/json",
              },
              method: 'POST'
          })
          .then(async function(response) {
              if (response.ok) {
                  const result = await response.json();
                  if (result.in_image == true) {
                      button.classList.add("right_answer");
                      context.strokeStyle = "green";
                      await drawRect(last_box);
                      if (result.all_answers == true) {
                          await new Promise(resolve => setTimeout(resolve, 100 || 1000));
                          document.location.href = "/";
                          return;
                      }
                      var box = result.new_box;
                      context.strokeStyle = "red";
                      await drawRect(box);
                      last_box = box;
                  } else {
                      button.classList.add("wrong_answer");
                  }
                  return;
              }
              throw new Error('Request failed.');
          })
          .catch(function(error) {
              console.log(error);
          });
  }